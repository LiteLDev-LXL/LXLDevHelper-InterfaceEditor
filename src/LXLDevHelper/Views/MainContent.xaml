<UserControl x:Class="LXLDevHelper.Views.MainContent"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:viewmodels="clr-namespace:LXLDevHelper.ViewModels" 
             xmlns:ui="http://schemas.modernwpf.com/2019"
             d:DataContext="{d:DesignInstance Type=viewmodels:MainContentViewModel}"
             xmlns:local="clr-namespace:LXLDevHelper.Views"
             xmlns:converters="clr-namespace:Elements.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="850">
    <UserControl.Resources>
        <Style TargetType="TextBox" BasedOn="{StaticResource ComboBoxTextBoxStyle}">
            <Setter Property="ui:ControlHelper.CornerRadius" Value="0" />
        </Style>
        <Style x:Key="DataTextBlock" TargetType="TextBlock" BasedOn="{StaticResource DataGridTextBlockStyle}">
            <Setter Property="Padding" Value="5,0,0,0" />
        </Style>
        <Style x:Key="EditingTextbox" TargetType="TextBox" BasedOn="{StaticResource ComboBoxTextBoxStyle}">
            <Setter Property="Padding" Value="5,0,0,0" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="ui:ControlHelper.CornerRadius" Value="0" />
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <converters:RevBoolToVisibility x:Key="RevBoolToVisibility" />
        <converters:BoolToVisibility x:Key="BoolToVisibility" />
        <converters:BoolToOpacity  x:Key="BoolToOpacity" />
    </UserControl.Resources>
    <Grid>
        <DockPanel>
            <StackPanel VerticalAlignment="Top" Orientation="Horizontal" DockPanel.Dock="Top">
                <Button Name="LoadButton" Content="加载" Click="LoadButton_Click" Margin="5,5,0,5"/>
                <Button Content="保存" Click="SaveButton_Click" Margin="5,5,0,5"/>
                <Button Content="复制Json数据到剪切板" Click="CopyButton_Click" Margin="5,5,0,5"/>
                <Button Content="打开数据文件夹" Click="OpenDirButton_Click" Margin="5,5,0,5"/>
            </StackPanel>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="3*"/>
                </Grid.ColumnDefinitions>
                <DockPanel>
                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom" HorizontalAlignment="Center">
                        <Button Content="增加" Margin="5" Click="AddDirButton_Click"/>
                        <Button Content="删除选中" Margin="0,5" Click="DeleteDirButton_Click"/>
                    </StackPanel>
                    <TextBlock Text="文件夹：" DockPanel.Dock="Top"/>
                    <ListBox Name="DirListBox" HorizontalContentAlignment="Stretch" ItemsSource="{Binding DirCollection}" Margin="5,5,0,5" SelectionChanged="DirListBox_SelectionChanged">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid Margin="-8">
                                    <TextBox Tag="{Binding Me,Mode=OneWay}" Text="{Binding DirName,Mode=TwoWay}" GotFocus="DirNameTextBox_GotFocus"/>
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </DockPanel>
                <DockPanel Grid.Column="1" IsEnabled="{Binding CurrentClassCollectionHasSet}">
                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom" HorizontalAlignment="Center" >
                        <Button Content="增加" Margin="5" Click="AddClassButton_Click"/>
                        <Button Content="删除选中" Margin="0,5" Click="DeleteClassButton_Click"/>
                    </StackPanel>
                    <TextBlock Text="类：" DockPanel.Dock="Top"/>
                    <ListBox Name="ClassListBox" HorizontalContentAlignment="Stretch" ItemsSource="{Binding CurrentClassCollection}" Margin="5,5,0,5" SelectionChanged="ClassListBox_SelectionChanged">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid Margin="-8">
                                    <TextBox Tag="{Binding Me,Mode=OneWay}" Text="{Binding ClassName,Mode=TwoWay}"  GotFocus="ClassNameTextBox_GotFocus"/>
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </DockPanel>
                <DockPanel Grid.Column="2" IsEnabled="{Binding CurrentClassHasSet}">
                    <TabControl DockPanel.Dock="Top" Background="{x:Null}" BorderBrush="Transparent" Foreground="Transparent">
                        <TabItem IsEnabled="{Binding CurrentClassHasSet}" IsSelected="{Binding EditFunc}"  Style="{StaticResource TabItemPivotStyle}">
                            <TabItem.Header>
                                <ToggleButton Content="方法" Margin="-10,-10,-10,-5" Padding="10,5" IsChecked="{Binding EditFunc}"/>
                            </TabItem.Header>
                            <DockPanel>
                                <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom"  HorizontalAlignment="Center">
                                    <Button Content="增加" Margin="5" Click="AddFuncButton_Click"/>
                                    <Button Content="删除选中" Margin="0,5" Click="DeleteFuncButton_Click"/>
                                </StackPanel>
                                <ListBox Name="FuncListBox" Margin="5,5,0,5" ItemsSource="{Binding CurrentClass.AllFunc}" SelectionChanged="FuncListBox_SelectionChanged">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate >
                                            <Grid  Margin="-8" >
                                                <TextBox  Tag="{Binding Me}"  Text="{Binding FuncName,Mode=TwoWay}" GotFocus="FuncNameTextBox_GotFocus"/>
                                            </Grid>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </DockPanel>
                        </TabItem>
                        <TabItem IsEnabled="{Binding CurrentClassHasSet}" IsSelected="{Binding EditProperty}" Style="{StaticResource TabItemPivotStyle}">
                            <TabItem.Header>
                                <ToggleButton Content="属性" Margin="-10,-10,-10,-5" Padding="10,5" IsChecked="{Binding EditProperty}"/>
                            </TabItem.Header>
                            <DockPanel>
                                <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom"  HorizontalAlignment="Center">
                                    <Button Content="增加" Margin="5" Click="AddPropertyButton_Click"/>
                                    <Button Content="删除选中" Margin="0,5" Click="DeletePropertyButton_Click"/>
                                </StackPanel>
                                <ListBox Name="PropertyListBox" Margin="5,5,0,5" ItemsSource="{Binding CurrentClass.AllProperty}" SelectionChanged="PropertyListBox_SelectionChanged">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <Grid  Margin="-8">
                                                <TextBox Tag="{Binding Me}" Text="{Binding PropertyName,Mode=TwoWay}" GotFocus="PropertyNameTextBox_GotFocus"/>
                                            </Grid>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </DockPanel>
                        </TabItem>
                    </TabControl>
                </DockPanel>
                <DockPanel Grid.Column="3" IsEnabled="{Binding CurrentClassHasSet,Mode=OneWay}">
                    <DockPanel DockPanel.Dock="Top" Margin="2" Opacity="{Binding CurrentClassHasSet,Mode=OneWay,Converter={StaticResource BoolToOpacity}}">
                        <CheckBox Style="{StaticResource DataGridCheckBoxStyle}" DockPanel.Dock="Right" IsChecked="{Binding CurrentClass.IsStatic}" ToolTip="静态类下所有方法在保存时会自动设置静态" Margin="2,0,0,0">
                            <TextBlock Text="静态" Opacity="{Binding CurrentClass.IsStatic,Mode=OneWay,Converter={StaticResource BoolToOpacity}}" Margin="-7,0,0,0"/>
                        </CheckBox>
                        <CheckBox Style="{StaticResource DataGridCheckBoxStyle}" DockPanel.Dock="Right" IsChecked="{Binding CurrentClass.IsInterface}" ToolTip="是否接口（接口类无构造函数）" Margin="5,0,0,0">
                            <TextBlock Text="接口" Opacity="{Binding CurrentClass.IsInterface,Mode=OneWay,Converter={StaticResource BoolToOpacity}}" Margin="-7,0,0,0"/>
                        </CheckBox>
                        <TextBlock Text="类描述：" VerticalAlignment="Center"/>
                        <TextBox Text="{Binding CurrentClass.Description,Mode=TwoWay}" AcceptsReturn="True" AcceptsTab="True"/>
                    </DockPanel>
                    <Grid>
                        <DockPanel Visibility="{Binding EditFunc,Converter={StaticResource BoolToVisibility},Mode=OneWay}"
                                    IsEnabled="{Binding CurrentFuncHasSet}" Opacity="{Binding CurrentFuncHasSet,Mode=OneWay,Converter={StaticResource BoolToOpacity}}">
                            <DockPanel DockPanel.Dock="Top" Margin="2">
                                <CheckBox Visibility="{Binding CurrentClass.IsStatic,Converter={StaticResource RevBoolToVisibility}}" Style="{StaticResource DataGridCheckBoxStyle}" DockPanel.Dock="Right" IsChecked="{Binding CurrentFunc.IsStatic}">
                                    <TextBlock Text="静态" Opacity="{Binding CurrentFunc.IsStatic,Mode=OneWay,Converter={StaticResource BoolToOpacity}}"/>
                                </CheckBox>
                                <TextBlock Text="方法描述："/>
                                <TextBox Text="{Binding CurrentFunc.Description}" AcceptsReturn="True" AcceptsTab="True"/>
                            </DockPanel>
                            <DockPanel DockPanel.Dock="Top" Margin="2">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="4*"/>
                                        <ColumnDefinition Width="3*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="返回值" VerticalAlignment="Center" Margin="0,0,5,0"/>
                                    <DockPanel Grid.Column="1">
                                        <TextBlock Text="名称：" VerticalAlignment="Center"/>
                                        <TextBox Text="{Binding CurrentFunc.ReturnName}"/>
                                    </DockPanel>
                                    <DockPanel Grid.Column="2">
                                        <TextBlock Text=" 类型：" VerticalAlignment="Center"/>
                                        <ComboBox HorizontalAlignment="Stretch" Text="{Binding CurrentFunc.ReturnType}" IsEditable="True"  ui:ControlHelper.CornerRadius="0" 
                                                  ItemsSource="{Binding AvaliableTypes,Mode=OneWay}" SelectionChanged="SelectTypeComboBox_SelectionChanged">
                                            <ComboBox.ToolTip>
                                                <StackPanel>
                                                    <TextBlock Text="选择或手动输入类型"/>
                                                    <TextBlock Text="右键下拉框箭头位置编辑匿名函数"/>
                                                    <TextBlock Text="当前内容:"/>
                                                    <TextBlock Text="{Binding CurrentFunc.ReturnType,Mode=OneWay}" TextWrapping="Wrap"/>
                                                </StackPanel>
                                            </ComboBox.ToolTip>
                                            <ComboBox.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem Tag="{Binding CurrentFunc.Me}" Header="编辑匿名函数" Click="SelectTypeMenuItem_Click"/>
                                                </ContextMenu>
                                            </ComboBox.ContextMenu>
                                        </ComboBox>
                                    </DockPanel>
                                </Grid>
                            </DockPanel>
                            <DockPanel DockPanel.Dock="Top" Margin="2">
                                <TextBlock Text="返回值描述：" VerticalAlignment="Center"/>
                                <TextBox Text="{Binding CurrentFunc.ReturnDescription}" AcceptsReturn="True" AcceptsTab="True"/>
                            </DockPanel>
                            <Grid DockPanel.Dock="Bottom" Margin="5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Button HorizontalAlignment="Stretch" Content="手动修改JSON" Click="EditCurrentFuncJsonButton_Click"/>
                                <Button Grid.Column="2" HorizontalAlignment="Stretch" Content="复制JSON" Click="CopyCurrentFuncJsonButton_Click"/>
                                <Button Grid.Column="4" HorizontalAlignment="Stretch" Content="粘贴(覆盖)JSON" Click="PasteCurrentFuncJsonButton_Click"/>
                            </Grid>

                            <DockPanel>
                                <TextBlock Text="方法参数表：" DockPanel.Dock="Top"/>
                                <DataGrid Name="ParamsDataGrid" CanUserSortColumns="False" ItemsSource="{Binding CurrentFunc.Params}" AutoGenerateColumns="False" CanUserResizeColumns="True" CanUserResizeRows="False">
                                    <DataGrid.ContextMenu>
                                        <ContextMenu StaysOpen="true">
                                            <MenuItem Header="添加" Click="AddParams_Click" />
                                            <MenuItem Header="删除" Click="DeleteParams_Click" />
                                            <MenuItem Header="插入" Click="InsertParams_Click" />
                                        </ContextMenu>
                                    </DataGrid.ContextMenu>
                                    <DataGrid.Columns>
                                        <DataGridCheckBoxColumn Width ="44" Header="可选" Binding="{Binding Optional}" CanUserResize="False" HeaderStyle="{StaticResource DateTimePickerFlyoutButtonStyle}"/>
                                        <DataGridTextColumn Width ="4*" Header="参数名" Binding="{Binding ParamName}" HeaderStyle="{StaticResource DateTimePickerFlyoutButtonStyle}" EditingElementStyle="{StaticResource EditingTextbox}" ElementStyle="{StaticResource DataTextBlock}"/>
                                        <DataGridTemplateColumn Width ="6*" Header="类型" HeaderStyle="{StaticResource DateTimePickerFlyoutButtonStyle}">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding ParamType}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,0,0,0"/>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                            <DataGridTemplateColumn.CellEditingTemplate>
                                                <DataTemplate>
                                                    <ComboBox HorizontalAlignment="Stretch" Text="{Binding ParamType}" IsEditable="True"  ui:ControlHelper.CornerRadius="0" 
                                                    ItemsSource="{Binding AvaliableTypes,Mode=OneWay}" SelectionChanged="SelectTypeComboBox_SelectionChanged">
                                                        <ComboBox.ToolTip>
                                                            <StackPanel>
                                                                <TextBlock Text="选择或手动输入类型"/>
                                                                <TextBlock Text="右键下拉框箭头位置编辑匿名函数"/>
                                                                <TextBlock Text="当前内容:"/>
                                                                <TextBlock Text="{Binding ParamType,Mode=OneWay}" TextWrapping="Wrap"/>
                                                            </StackPanel>
                                                        </ComboBox.ToolTip>
                                                        <ComboBox.ContextMenu>
                                                            <ContextMenu>
                                                                <MenuItem Tag="{Binding Me}" Header="编辑匿名函数" Click="SelectTypeMenuItem_Click"/>
                                                            </ContextMenu>
                                                        </ComboBox.ContextMenu>
                                                    </ComboBox>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellEditingTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTextColumn Width ="9*" Header="描述" Binding="{Binding Description}" HeaderStyle="{StaticResource DateTimePickerFlyoutButtonStyle}" EditingElementStyle="{StaticResource EditingTextbox}" ElementStyle="{StaticResource DataTextBlock}"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </DockPanel>
                        </DockPanel>
                        <DockPanel Visibility="{Binding EditProperty,Converter={StaticResource BoolToVisibility},Mode=OneWay}"
                                   IsEnabled="{Binding CurrentPropertyHasSet}" Opacity="{Binding CurrentPropertyHasSet,Mode=OneWay,Converter={StaticResource BoolToOpacity}}">
                            <DockPanel DockPanel.Dock="Top" Margin="2">
                                <TextBlock Text="属性描述：" VerticalAlignment="Center"/>
                                <TextBox Text="{Binding CurrentProperty.Description}" AcceptsReturn="True" AcceptsTab="True"/>
                            </DockPanel>
                            <DockPanel DockPanel.Dock="Top">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <CheckBox Style="{StaticResource DataGridCheckBoxStyle}" HorizontalAlignment="Center" IsChecked="{Binding CurrentProperty.IsReadonly}">
                                        <TextBlock Text="只读" Opacity="{Binding CurrentProperty.IsReadonly,Mode=OneWay,Converter={StaticResource BoolToOpacity}}"/>
                                    </CheckBox>
                                    <CheckBox Style="{StaticResource DataGridCheckBoxStyle}" Grid.Column="1" HorizontalAlignment="Center" IsChecked="{Binding CurrentProperty.IsStatic}" Visibility="{Binding CurrentClass.IsStatic,Converter={StaticResource RevBoolToVisibility}}">
                                        <TextBlock Text="静态" Opacity="{Binding CurrentProperty.IsStatic,Mode=OneWay,Converter={StaticResource BoolToOpacity}}"/>
                                    </CheckBox>
                                </Grid>
                            </DockPanel>
                            <DockPanel DockPanel.Dock="Top" Margin="2">
                                <TextBlock Text="属性类型：" VerticalAlignment="Center"/>
                                <ComboBox HorizontalAlignment="Stretch" Text="{Binding CurrentProperty.PropertyType,Mode=TwoWay}" IsEditable="True"  ui:ControlHelper.CornerRadius="0" 
                                                  ItemsSource="{Binding AvaliableTypes,Mode=OneWay}" SelectionChanged="SelectTypeComboBox_SelectionChanged">
                                    <ComboBox.ToolTip>
                                        <StackPanel>
                                            <TextBlock Text="选择或手动输入类型"/>
                                            <TextBlock Text="右键下拉框箭头位置编辑匿名函数"/>
                                            <TextBlock Text="当前内容:"/>
                                            <TextBlock Text="{Binding CurrentProperty.PropertyType,Mode=OneWay}" TextWrapping="Wrap"/>
                                        </StackPanel>
                                    </ComboBox.ToolTip>
                                    <ComboBox.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Tag="{Binding CurrentProperty.Me}" Header="编辑匿名函数" Click="SelectTypeMenuItem_Click"/>
                                        </ContextMenu>
                                    </ComboBox.ContextMenu>
                                </ComboBox>
                            </DockPanel>
                            <Button Content="手动修改JSON" DockPanel.Dock="Bottom" HorizontalAlignment="Stretch" Margin="5" Click="EditCurrentPropertyJsonButton_Click"/>
                            <Button Content="复制JSON" Click="CopyCurrentPropertyJsonButton_Click"/>
                            <Button Content="粘贴（覆盖）JSON" Click="PasteCurrentPropertyJsonButton_Click"/>
                            <Grid/>
                            <!--<DockPanel IsEnabled="{Binding CurrentFuncHasSet}">
                                <TextBlock Text="方法参数表：" DockPanel.Dock="Top"/>
                                <DataGrid Name="ParamsDataGrid" CanUserSortColumns="False" ItemsSource="{Binding CurrentFunc.Params}" AutoGenerateColumns="False" CanUserResizeColumns="True" CanUserResizeRows="False">
                                    <DataGrid.ContextMenu>
                                        <ContextMenu StaysOpen="true">
                                            <MenuItem Header="添加" Click="AddParams_Click" />
                                            <MenuItem Header="删除" Click="DeleteParams_Click" />
                                            <MenuItem Header="插入" Click="InsertParams_Click" />
                                        </ContextMenu>
                                    </DataGrid.ContextMenu>
                                    <DataGrid.Columns>
                                        <DataGridCheckBoxColumn Width ="44" Header="可选" Binding="{Binding Optional}" CanUserResize="False" HeaderStyle="{StaticResource DateTimePickerFlyoutButtonStyle}"/>
                                        <DataGridTextColumn Width ="3*" Header="参数名称" Binding="{Binding ParamName}" HeaderStyle="{StaticResource DateTimePickerFlyoutButtonStyle}" EditingElementStyle="{StaticResource EditingTextbox}" ElementStyle="{StaticResource DataTextBlock}"/>
                                        <DataGridTextColumn Width ="2*" Header="类型" Binding="{Binding ParamType}" HeaderStyle="{StaticResource DateTimePickerFlyoutButtonStyle}" EditingElementStyle="{StaticResource EditingTextbox}" ElementStyle="{StaticResource DataTextBlock}"/>
                                        <DataGridTextColumn Width ="6*" Header="描述" Binding="{Binding Description}" HeaderStyle="{StaticResource DateTimePickerFlyoutButtonStyle}" EditingElementStyle="{StaticResource EditingTextbox}" ElementStyle="{StaticResource DataTextBlock}"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </DockPanel>-->
                        </DockPanel>
                    </Grid>
                </DockPanel>
            </Grid>
            <!--<ListView DockPanel.Dock="Bottom">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding ClassName}"/>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>-->
        </DockPanel>
    </Grid>
</UserControl>
