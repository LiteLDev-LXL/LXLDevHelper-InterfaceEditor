<Window x:Class="LXLDevHelper.Views.EditEventsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:LXLDevHelper.Views"
        xmlns:viewmodels="clr-namespace:LXLDevHelper.ViewModels" 
        xmlns:ui="http://schemas.modernwpf.com/2019" xmlns:converters="clr-namespace:Elements.Converters"
        d:DataContext="{d:DesignInstance Type=viewmodels:EditEventsWindowViewModel}"
        ui:WindowHelper.UseModernWindowStyle="True"
        WindowStyle="ToolWindow"
        mc:Ignorable="d" Topmost="True" 
        Title="编辑事件" Height="350" Width="500" >
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="3*"/>
        </Grid.ColumnDefinitions>
        <DockPanel>
            <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom"  HorizontalAlignment="Center">
                <Button Content="增加" Margin="5" Click="AddEventButton_Click"/>
                <Button Content="删除选中" Margin="0,5" Click="DeleteEventButton_Click"/>
            </StackPanel>
            <ListBox Name="EventListBox" ItemsSource="{Binding AllListenFunc}" SelectionChanged="EventListBox_SelectionChanged">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <TextBox Tag="{Binding Me,Mode=OneWay}" Text="{Binding EventKey}" GotFocus="EventNameTextBox_GotFocus"/>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </DockPanel>
        <DockPanel Grid.Column="1">
            <!--<DockPanel DockPanel.Dock="Top">
                <TextBlock Text="方法描述"/>
                <TextBox Text="{Binding GlobalDescription}" AcceptsReturn="True" AcceptsTab="True"/>
            </DockPanel>-->
            <!--<DockPanel DockPanel.Dock="Top">
                <TextBlock Text="方法描述"/>
                <TextBox Text="{Binding GlobalDescription}" AcceptsReturn="True" AcceptsTab="True"/>
            </DockPanel>-->
            <DockPanel DockPanel.Dock="Top" Margin="2">
                <CheckBox  Style="{StaticResource DataGridCheckBoxStyle}" DockPanel.Dock="Right" IsChecked="{Binding GlobalIsStatic}" Margin="5,0,2,0">
                    <TextBlock Text="静态" Opacity="{Binding GlobalIsStatic,Mode=OneWay,Converter={StaticResource BoolToOpacity}}" Margin="-7,0,0,0"/>
                </CheckBox>
                <TextBlock Text="方法描述："/>
                <ScrollViewer BorderBrush="{Binding Content.BorderBrush,RelativeSource={RelativeSource Self}}" BorderThickness="1" MaxHeight="88" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" ui:ScrollViewerHelper.AutoHideScrollBars="True">
                    <TextBox BorderThickness="0" Text="{Binding GlobalDescription}" AcceptsReturn="True" AcceptsTab="True" ui:ScrollViewerHelper.AutoHideScrollBars="True"/>
                </ScrollViewer>
            </DockPanel>
            <Grid DockPanel.Dock="Top">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <DockPanel Margin="2">
                    <DockPanel Grid.Column="1">
                        <TextBlock Text="返回值 类型：" VerticalAlignment="Center"/>
                        <ComboBox HorizontalAlignment="Stretch" Text="{Binding GlobalReturnType}" IsEditable="True"  ui:ControlHelper.CornerRadius="0" >
                            <ComboBox.Items>
                                <ComboBoxItem Content="Boolean"/>
                            </ComboBox.Items>
                            <ComboBox.ToolTip>
                                <StackPanel>
                                    <TextBlock Text="选择或手动输入类型"/>
                                    <TextBlock Text="当前内容:"/>
                                    <TextBlock Text="{Binding GlobalReturnType,Mode=OneWay}" TextWrapping="Wrap"/>
                                </StackPanel>
                            </ComboBox.ToolTip>
                        </ComboBox>
                    </DockPanel>
                </DockPanel>
                <DockPanel Grid.Column="1" Margin="2">
                    <TextBlock Text="描述：" VerticalAlignment="Center"/>
                    <TextBox Text="{Binding GlobalReturnDescription}" AcceptsReturn="True" AcceptsTab="True"/>
                </DockPanel>

            </Grid>
            <Separator DockPanel.Dock="Top"/>
            <DockPanel DockPanel.Dock="Top" IsEnabled="{Binding ElementName=EventListBox,Path=SelectedIndex,Converter={StaticResource SelectedToBool}}" Opacity="{Binding IsEnabled, RelativeSource={RelativeSource Self},Converter={StaticResource BoolToOpacity}}">
                <DockPanel DockPanel.Dock="Top" Margin="2">
                    <TextBlock Text="事件名：" VerticalAlignment="Center"/>
                    <TextBox Text="{Binding CurrentFunc.EventName,Mode=TwoWay}" AcceptsReturn="True" AcceptsTab="True"/>
                    <TextBlock Text="描述：" VerticalAlignment="Center" Margin="3,0,0,0"/>
                    <TextBox Text="{Binding CurrentFunc.EventDescription,Mode=TwoWay}" AcceptsReturn="True" AcceptsTab="True"/>
                </DockPanel>
                <DockPanel DockPanel.Dock="Top" Margin="2">
                    <TextBlock Text="回调名：" VerticalAlignment="Center"/>
                    <TextBox Text="{Binding CurrentFunc.CallbackName,Mode=TwoWay}" AcceptsReturn="True" AcceptsTab="True"/>
                    <TextBlock Text="描述：" VerticalAlignment="Center"  Margin="3,0,0,0"/>
                    <TextBox Text="{Binding CurrentFunc.CallbackDescription,Mode=TwoWay}" AcceptsReturn="True" AcceptsTab="True"/>
                </DockPanel>
                <DockPanel DockPanel.Dock="Top" Margin="2">
                    <CheckBox  IsChecked="{Binding CurrentFunc.CallbackReturnIntercept}" Style="{StaticResource DataGridCheckBoxStyle}" DockPanel.Dock="Right" Margin="5,0,2,0">
                        <TextBlock Text="可拦截" Opacity="{Binding Parent.IsChecked, Converter={StaticResource BoolToOpacity}, RelativeSource={RelativeSource Self}}" Margin="-7,0,0,0"/>
                    </CheckBox>
                    <TextBlock Text="回调方法返回值："/>
                    <TextBox Name="CallbackReturnType" Text="{Binding CurrentFunc.EventCallbackFunctionReturnType,Mode=OneWay}" IsEnabled="False"/>
                </DockPanel>
                <TextBlock Text="回调匿名方法参数：" DockPanel.Dock="Top" Margin="2,0,0,0"/>
                <DataGrid DockPanel.Dock="Top" Name="ParamsDataGrid" CanUserSortColumns="False" ItemsSource="{Binding CurrentFunc.EventCallbackFunction.Params}" AutoGenerateColumns="False" CanUserResizeColumns="True" CanUserResizeRows="False">
                    <DataGrid.ContextMenu>
                        <ContextMenu StaysOpen="true">
                            <MenuItem Header="添加" Click="AddParams_Click" />
                            <MenuItem Header="删除" Click="DeleteParams_Click" />
                            <MenuItem Header="插入" Click="InsertParams_Click" />
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                    <DataGrid.Columns>
                        <DataGridCheckBoxColumn Width ="44" Header="可选" Binding="{Binding Optional}" CanUserResize="False" HeaderStyle="{StaticResource DateTimePickerFlyoutButtonStyle}"/>
                        <DataGridTextColumn Width ="2*" Header="参数名" Binding="{Binding ParamName}" HeaderStyle="{StaticResource DateTimePickerFlyoutButtonStyle}" EditingElementStyle="{StaticResource EditingTextbox}" ElementStyle="{StaticResource DataTextBlock}"/>
                        <DataGridTemplateColumn Width ="3*" Header="类型" HeaderStyle="{StaticResource DateTimePickerFlyoutButtonStyle}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock  Text="{Binding ParamType,Mode=OneWay}" HorizontalAlignment="Left"  VerticalAlignment="Center" Margin="5,0,0,0"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <ComboBox HorizontalAlignment="Stretch" Text="{Binding ParamType,Mode=TwoWay}" IsEditable="True"  ui:ControlHelper.CornerRadius="0" 
                                                  Tag="{Binding Me,Mode=OneWay}"  ItemsSource="{Binding AvaliableTypes,Mode=OneWay}" SelectionChanged="SelectTypeComboBox_SelectionChanged">
                                        <ComboBox.ToolTip>
                                            <StackPanel>
                                                <TextBlock Text="选择或手动输入类型"/>
                                                <TextBlock Text="右键下拉框箭头位置编辑匿名函数"/>
                                                <TextBlock Text="当前内容:"/>
                                                <TextBlock Text="{Binding ParamType,Mode=OneWay}" TextWrapping="Wrap"/>
                                            </StackPanel>
                                        </ComboBox.ToolTip>
                                        <ComboBox.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Tag="{Binding Me,Mode=OneWay}" Header="编辑匿名函数" Click="SelectTypeMenuItem_Click"/>
                                            </ContextMenu>
                                        </ComboBox.ContextMenu>
                                    </ComboBox>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </DockPanel>
            <DockPanel/>
        </DockPanel>
    </Grid>
</Window>
